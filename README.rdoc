create-react-app remainderapp

npm install redux react-redux --save

npm start

Visit: https://react-bootstrap.github.io/getting-started.html
Copy maxcdn ... bootstrap.min.css on index.html file

Remove src/
Create src/index.js
Create src/components/App.jsx
Create src/App.css
Create src/constants.js
Create src/actions/
Create src/actions/index/
Create src/actions/index.js

now setup redux application, initialize the actual store
import { Provider } from 'react-redux'
Add above on src/index.js

now wrap the provider tag on the ReactDom.reder() on src/index.js


now create a store on src/index.js file
import { createStore } from 'redux';

also create constant of store
const store = createStore();

call this store obj on Provider tag

Next step is to create reducers dir under src

Now you will get uncaught Error: Expected the reducer to be a function. To fix this error change src/index.js file
import reducer from './reducers'; and pass reducer object as argument on createStore(reducer);

Reducer, store and providers flow need to know first.

Now hookup action creater we made. 
create constuctor, call event on button, make addReminder()


We can call mapStateToProps() to connect() function as first parameter

Create helper method on app.js renderReminders(). This method will return all the reminders added by users.

We can create css file and call like this:
Index.css on src/
Add below code on src/Index.js
import './Index.css';

How to delete reminders:
-------------------------
- Add button x
- Add constant   export const DELETE_REMINDER = 'DELETE_REMINDER';
- We make action creator under actions/index.js
- go to component, components/App.jsx
  > import Delete_reminder constant
  import { addReminder, deleteReminder } from '../actions';
  create helper method deleteReminder
  deleteReminder(id)
  Hookup deleteReminder function on delete button
- Finally we will create a reducer
  Remove reminder from the list
  import DELETE_REMINDER const on reducers/index.js
  create case on switch statement of reminders
  On reducers after importing const next you need to use removeById() and write logic to remove record from the arrary by filtering id
  Call removeById(state, action.id); inside the switch case inside the reducers

  - now modify deleteReminder(id) on App.jsx and add the code to refresh content/list
  this.props.deleteReminder(id);

Add calender viewer
<input className="form-control"
                     type="datetime-local"
                     onChange={event => this.setState({dueDate: event.target.value})}
class App extends Component {
  constructor(props) {
    super(props);
    this.state = {
      text: '',
      dueDate: '' // make it empty string for now and is set on setState on input field onChange() event
    }
  }
}

go to addRemainder() action and add second parameter as dueDate

go to reducers, reminder action/method add dueDate, you can do like this:
const reminder = (action) => {
  let {text, dueDate} = action;
  return {
    id: Math.random(),
    text,
    dueDate
  }
}

now App.jsx call addReminder()
this.props.addReminder(this.state.text, this.state.dueDate);